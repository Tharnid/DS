x <- "Hello from R!!!"
x
print(x)
source('E:/GH/DS/HelloR.R')
source('E:/GH/DS/Operators.R')
source('E:/GH/DS/Operators.R')
print(z)
c <- "DEF 456" # character vector
c
f(2)
f
f(3)
f
f <- function(x) { x + 1 }
f(3)
f(2)
View(f)
source('~/.active-rstudio-document')
v
print(v)
v <- c(2,3,4);
print(v)
v
s
s <- 1:6
print(s)
s + v
m
source('E:/GH/DS/matrix.R')
source('E:/GH/DS/array.R')
a
source('E:/GH/DS/list.R')
l
source('E:/GH/DS/list.R')
source('E:/GH/DS/list.R')
l
source('E:/GH/DS/list.R')
unclass(factors)
factors <- factor(c("Male", "Female", "Male", "Male", "Female"))
levels(factors)
unclass(factors)
source('E:/GH/DS/factors.R')
df
df
print(df)
df
df
df
df
source('E:/GH/DS/DataFrame.R')
df
source('E:/GH/DS/DataFrame.R')
source('E:/GH/DS/DataFrame.R')
df
source('E:/GH/DS/DataFrame.R')
df
source('E:/GH/DS/DataFrame.R')
df[1,2]
df[1, ]
df[ , 2]
df[["HowMany"]]
df$HowMany
df[["Wins"]]
df$TournamentBound
df[df$TournamentBound == TRUE]
df[df$Wins == 7, ]
df[df$Wins > 5]
df[df$Wins > 6]
df[df$Wins > 6,]
source('E:/GH/DS/Vectors.R')
source('E:/GH/DS/Vectors.R')
c
source('E:/GH/DS/Vectors.R')
1 + 2
install.packages("ggplot2")
?col
?nrow
source('E:/GH/DS/TransformingData.R')
source('E:/GH/DS/TransformingData.R')
source('E:/GH/DS/TransformingData.R')
source('E:/GH/DS/TransformingData.R')
movies <- read.table(
file = "Movies.txt",
sep = "\t",
header = TRUE,
quote="\"")
source('E:/GH/DS/TransformingData.R')
head(movies)
View(movies)
setwd("E:GH/DS/DataToImport")
movies <- read.table(
file = "Movies.txt",
sep = "\t",
header = TRUE,
quote="\"")
head(movies)
View(movies)
head(movies)
source('E:/GH/DS/TransformingData.R')
sum(is.na(movies))
source('E:/GH/DS/TransformingData.R')
tail(movies)
View(movies)
source('E:/GH/DS/TransformingData.R')
movies <- na.omit(movies)
sum(is.na(movies))
head(movies$Runtime)
mean(movies$Runtime)
class(movies$Runtime)
runtimes <- as.character(movies$Runtime)
class(runtimes)
head(runtimes)
class(runtimes)
runtimes <- sub(" min", "", runtimes)
head(runtimes)
movies$Runtime <- as.integer(runtimes)
head(movies$Runtime)
class(movies$Runtime)
source('E:/GH/DS/TransformingData.R')
mean(movies$Runtime)
head(movies$Box.Office)
source('E:/GH/DS/TransformingData.R')
convertBoxOffice <- function(boxOffice)
{
stringBoxOffice <- as.character(boxOffice)
replaceBoxOffice <- gsub("[$|k|M]", "", stringBoxOffice)
numericBoxOffice <- as.numeric(replaceBoxOffice)
if(grepl("M", boxOffice)) {
numericBoxOffice
} else if(grepl("k", boxOffice)) {
numericBoxOffice * 0.001
} else {
numericBoxOffice * 0.000001
}
}
movies$Box.Office <- sapply(movies$Box.Office, convertBoxOffice)
head(movies$Box.Office)
source('E:/GH/DS/TransformingData.R')
class(movies$Box.Office)
class(movies$Box.Office)
mean(movies$Box.Office)
View(movies)
source('E:/GH/DS/ExportingData.R')
head(movies$Box.Office)
write.csv(movies, "MoviesClean.CSV")
source('E:/GH/DS/ExportingData.R')
sd?
?d
?sd
?Exponential
vol_donut <- 2* 3.14^2*r^2*R
r <- 2
R <- 6
vol_donut <- 2* 3.14^2*r^2*R
